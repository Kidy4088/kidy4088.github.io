(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{608:function(t,v,_){"use strict";_.r(v);var e=_(2),r=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1. 简介")]),t._v(" "),_("ul",[_("li",[t._v("是一个基于 JVM、轻量级、高性能的应用平台，非常适合用于移动端后台、互联网、企业应用架构。")]),t._v(" "),_("li",[t._v("基于 Netty 全异步通信，并扩展出了许多有用的特性。")]),t._v(" "),_("li",[t._v("是基于 EventBus 设计的高性能架构，保证应用中不同部分以一种非堵塞的线程安全方式通讯。")]),t._v(" "),_("li",[t._v("是借鉴 Erlang 和 Akka 架构设计，能充分利用多核处理器性能并实现高并发编程需求的框架。")])]),t._v(" "),_("h2",{attrs:{id:"_2-特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-特点"}},[t._v("#")]),t._v(" 2. 特点")]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("支持多种编程语言")])]),t._v(" "),_("p",[t._v("目前支持 Java、JavaScript、Ruby、Python、Groovy、Clojure、Ceylon 等，并提供友好的 API 接口。以上技术栈的工程师可以非常容易的学习和使用 Vert.x 架构。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("异步无锁编程")])]),t._v(" "),_("p",[t._v("经典的多线程编程模型能满足很多 Web 开发场景，但随着移动互联网并发连接数的猛增，多线程并发控制模型性能难以扩展，同时要想控制好并发锁需要较高的技巧，目前 Reactor 异步编程模型开始跑马圈地，而 Vert.x 就是这种异步无锁编程的一个首选。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("对各种 IO 的丰富支持")])]),t._v(" "),_("p",[t._v("目前 Vert.x 的异步模型已支持 TCP、UDP、FileSystem、DNS、EventBus、Sockjs 等，基本满足绝大多数系统架构需求。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("分布式消息传输")])]),t._v(" "),_("p",[t._v("Vert.x 基于分布式Bus消息机制实现其 Actor 模型，我们的业务逻辑如果依赖其他 Actor 则通过 Bus 简单的将消息发送出去就可以了。EventBus 事件总线，可以轻松编写分布式解耦的程序，具有很好的扩展性。")]),t._v(" "),_("p",[t._v("EventBus 也是 Vert.x 架构的灵魂所在。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("生态体系日趋成熟")])]),t._v(" "),_("p",[t._v("Vert.x 归入Eclipse基金会门下，异步驱动已经支持了 Postgres、MySQL、MongoDB、Redis 等常用组件，并且有若干 Vert.x 在生产环境中的应用案例。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("Vert.x 是轻量级的")])]),t._v(" "),_("p",[t._v("Vert.x 的核心代码包只有650kB左右，同时提供丰富的扩展插件，满足各类需求。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("Vert.x 并不是一个Web容器")])]),t._v(" "),_("p",[t._v("Vert.x 并不是一个 Web Server，它是一种异步编程框架，你可以将自己基于 Vert.x 的应用程序放置到任何你想放置的Web容器中部署运行，可以非常方便的和 Spring，Spring Boot，Spring Cloud，Nodejs 等语言混编。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("模块化")])]),t._v(" "),_("p",[t._v("Vert.x 本身内置强大的模块管理机制,当你写完一个 Vert.x 业务逻辑的时候,你可以将其打包成 module，然后部署到基于 Maven 的仓库里，与现有主流的开发过程无缝结合。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("支持 WebSocket")])]),t._v(" "),_("p",[t._v("支持 WebSocket 协议兼容 SockJS，可以非常方便的实现 Web 前端和服务后端长连接通信，是轻量级 Web 聊天室应用首选解决方案。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("使用简单")])]),t._v(" "),_("p",[t._v("这里的简单意味着你编写的代码是完全基于异步事件的,类似 Node.js，与此同时.你不需要关注线程上的同步,与锁之类的概念，所有的程序都是异步执行并且通信是无阻塞的。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("良好的扩展性")])]),t._v(" "),_("p",[t._v("因为基于 Actor 模型,所以你的程序都是一个点一个点的单独在跑,一群点可以组成一个服务，某个点都是可以水平扩展，动态替换，这样你的程序，基本就可以达到无限制的水平扩展。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("高并发性")])]),t._v(" "),_("p",[t._v("Vert.x 是一个事件驱动非阻塞的异步编程框架，你可以在极少的核心线程里占用最小限度的硬件资源处理大量的高并发请求。此并发并非 JDK 库的并发，当你 Coding 的时候,不再关注其锁，同步块，死锁之类的概念，你就可以随性所欲的写自己的业务逻辑，Vert.x 本身内置三种线程池帮你处理。")])])]),t._v(" "),_("p",[t._v("Vert.x 面向高性能、分布式设计，所以在 Vert.x 的概论中，没有 MVC、没有 IOC、没有 AOP、没有 ORM，它有一套自己的解决方案来解决 Web 开发中的各种问题")])])}),[],!1,null,null,null);v.default=r.exports}}]);